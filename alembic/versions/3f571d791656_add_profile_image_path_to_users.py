"""Add profile_image_path to users

Revision ID: 3f571d791656
Revises:
Create Date: 2025-06-26 17:38:40.502023

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3f571d791656"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("listings", sa.Column("business_id", sa.Integer(), nullable=True))
    op.add_column("listings", sa.Column("status", sa.String(), nullable=True))
    op.add_column("listings", sa.Column("views", sa.Integer(), nullable=True))
    op.add_column("listings", sa.Column("listed_at", sa.DateTime(), nullable=True))
    op.alter_column("listings", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "listings", "contact_method", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column("listings", "is_public", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "listings",
        "asking_price",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.drop_index(op.f("ix_listings_id"), table_name="listings")
    op.create_foreign_key(None, "listings", "businesses", ["business_id"], ["id"])
    op.drop_column("listings", "gross_per_yr")
    op.drop_column("listings", "revenue_per_yr")
    op.drop_column("listings", "latitude")
    op.drop_column("listings", "market")
    op.drop_column("listings", "profit_per_yr")
    op.drop_column("listings", "name")
    op.drop_column("listings", "address")
    op.drop_column("listings", "longitude")
    op.add_column("users", sa.Column("profile_image_path", sa.String(), nullable=True))
    op.add_column("users", sa.Column("role", sa.String(), nullable=True))
    op.add_column("users", sa.Column("subscription_id", sa.Integer(), nullable=True))
    op.alter_column("users", "first_name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "last_name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "firebase_uid", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(op.f("ix_users_created_at"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_firebase_uid"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.create_unique_constraint(None, "users", ["email"])
    op.create_foreign_key(None, "users", "subscriptions", ["subscription_id"], ["id"])
    op.drop_column("users", "password")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "users", type_="foreignkey")
    op.drop_constraint(None, "users", type_="unique")
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(
        op.f("ix_users_firebase_uid"), "users", ["firebase_uid"], unique=False
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_created_at"), "users", ["created_at"], unique=False)
    op.alter_column(
        "users",
        "created_at",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column("users", "firebase_uid", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "last_name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "first_name", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_column("users", "subscription_id")
    op.drop_column("users", "role")
    op.drop_column("users", "profile_image_path")
    op.add_column(
        "listings",
        sa.Column(
            "longitude",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "listings",
        sa.Column("address", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "listings", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "listings",
        sa.Column(
            "profit_per_yr",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "listings",
        sa.Column("market", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "listings",
        sa.Column(
            "latitude",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "listings",
        sa.Column(
            "revenue_per_yr",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "listings",
        sa.Column(
            "gross_per_yr",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "listings", type_="foreignkey")
    op.create_index(op.f("ix_listings_id"), "listings", ["id"], unique=False)
    op.alter_column(
        "listings",
        "asking_price",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column("listings", "is_public", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column(
        "listings", "contact_method", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column("listings", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.drop_column("listings", "listed_at")
    op.drop_column("listings", "views")
    op.drop_column("listings", "status")
    op.drop_column("listings", "business_id")
    # ### end Alembic commands ###
